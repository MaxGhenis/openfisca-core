name: OpenFisca Core

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}-${{ github.ref }}-${{ github.sha }} # Cache the entire build Python environment
          restore-keys: |
            ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}-${{ github.ref }}
            ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}
            ${{ env.pythonLocation }}-build-
      - name: Build package
        run: make build
      - name: Cache build release
        id: restore-build-release
        uses: actions/cache@v2
        with:
          path: dist
          key: ${{ env.pythonLocation }}-build-release-${{ hashFiles('setup.py') }}-${{ github.ref }}-${{ github.sha }}
      - name: Cache coverage
        id: restore-coverage
        uses: actions/cache@v2
        with:
          path: .coverage
          key: ${{ hashFiles('.coverage) }}-${{ github.sha }}

  test-python:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}-${{ github.ref }}-${{ github.sha }}
      - name: Build package
        run: make build
      - name: Run Core tests
        run:  env PYTEST_ADDOPTS="--exitfirst" make test

  check-numpy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}-${{ github.ref }}-${{ github.sha }}
      - name: Check NumPy typing against latest 3 minor versions
        run: for i in {1..3}; do VERSION=$(${GITHUB_WORKSPACE}/.github/get-numpy-version.py prev) && pip install numpy==$VERSION && make check-types; done

  test-country-template:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}-${{ github.ref }}-${{ github.sha }}
      - name: Run Country Template tests
        run: |
          COUNTRY_TEMPLATE_PATH=`python -c "import openfisca_country_template; print(openfisca_country_template.CountryTaxBenefitSystem().get_package_metadata()['location'])"`
          openfisca test $COUNTRY_TEMPLATE_PATH/openfisca_country_template/tests/

  test-docs:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - name: Checkout docs
        run: make test-doc-checkout branch=${GITHUB_REF#refs/heads/}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}-${{ github.ref }}-${{ github.sha }}
      - name: Cache docs
        id: restore-docs
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ github.ref }}${{ env.pythonLocation }}-docs-${{ hashFiles('doc/requirements.txt') }}
      - name: Install dependencies
        run: make test-doc-install
      - name: Run doc tests
        run: make test-doc-build

  lint-files:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}-${{ github.ref }}-${{ github.sha }}
      - run: make check-syntax-errors
      - run: make check-style
      - name: Lint Python files
        run: "${GITHUB_WORKSPACE}/.github/lint-changed-python-files.sh"
      - name: Lint YAML tests
        run: "${GITHUB_WORKSPACE}/.github/lint-changed-yaml-tests.sh"

  check-version:
    runs-on: ubuntu-latest
    needs: [ test-python, check-numpy, test-country-template, test-docs, lint-files  ] # Last job to run
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Check version number has been properly updated
        run: "${GITHUB_WORKSPACE}/.github/is-version-number-acceptable.sh"

  sumbit-coverage:
    runs-on: ubuntu-latest
    needs: [ test-python, check-numpy, test-country-template ]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}-${{ github.ref }}-${{ github.sha }}
      - name: Cache coverage
        id: restore-coverage
        uses: actions/cache@v2
        with:
          path: .coverage
          key: ${{ hashFiles('.coverage) }}-${{ github.sha }}
      - name: Submit coverage to Coveralls
        run: |
          pip install coveralls
          coveralls

  check-for-functional-changes:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' # Only triggered for the `master` branch
    needs: [ check-version ]
    outputs:
      status: ${{ steps.stop-early.outputs.status }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - id: stop-early
        run: "${GITHUB_WORKSPACE}/.github/has-functional-changes.sh"

  deploy:
    runs-on: ubuntu-latest
    needs: [ check-for-functional-changes ]
    env:
      PYPI_USERNAME: openfisca-bot
      PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all the tags
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Cache build
        id: restore-build
        uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-build-${{ hashFiles('setup.py') }}-${{ github.ref }}-${{ github.sha }}
      - name: Cache build release
        id: restore-build-release
        uses: actions/cache@v2
        with:
          path: dist
          key: ${{ env.pythonLocation }}-build-release-${{ hashFiles('setup.py') }}-${{ github.ref }}-${{ github.sha }}
      - name: Upload a Python package to PyPi
        run: twine upload dist/* --username $PYPI_USERNAME --password $PYPI_PASSWORD
      - name: Publish a git tag
        run: "${GITHUB_WORKSPACE}/.github/publish-git-tag.sh"
      - name: Update doc
        run: |
          curl -X POST --header 'Content-Type: application/json' -d '{"branch":"master"}' https://circleci.com/api/v1.1/project/github/openfisca/openfisca-doc/build?circle-token=$CIRCLE_TOKEN
